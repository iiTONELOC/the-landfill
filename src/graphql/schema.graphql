type User {
  _id: ID!
  username: String!
  email: String!
  role: String!
  lists: [List]
}

type List {
  _id: ID!
  userId: ID!
  name: String!
  products: [ListItem]
  isDefault: Boolean!
  productCount: Int
  itemCount: Int
  createdAt: String
  updatedAt: String
}

type UserProduct {
  _id: ID!
  productData: Product!
  productAlias: String
  createdAt: String
  updatedAt: String
}

type ListItem {
  _id: ID!
  listId: ID!
  product: UserProduct
  username: String!
  notes: String
  quantity: Int!
  isCompleted: Boolean!
  createdAt: String
  updatedAt: String
}

type Product {
  _id: ID!
  name: String!
  barcode: [String!]
  source: Source
  createdAt: String
  updatedAt: String
}

type Source {
  _id: ID!
  name: String!
  urlToSearchResult: String
}

type Auth {
  token: ID!
  user: User
}

type AddAppUserResponse {
  token: ID!
  user: User
  appKey: String
}

type Query {
  me: User
  list(listId: ID!): List
  myLists: [List]
  listItem(listItemId: ID!): ListItem
}

type Mutation {
  loginUserDevice(username: String!, password: String!, deviceKey: String!): Auth
  loginUserApp(username: String!, password: String!, appKey: String!): Auth
  refreshTokenFromApp(appKey: String!): Auth
  regenerateAppKeyFromApp(appKey: String!): String
  regenerateDeviceKeyFromApp(appKey: String!): String
  regenerateDeviceKeyFromDevice(deviceKey: String!, username: String!, password: String!): String
  addUser(username: String!, email: String!, password: String!): Auth
  addUserFromApp(username: String!, email: String!, password: String!): AddAppUserResponse
  updateUser(username: String, email: String): User
  generateDeviceKey: String
  generateAppKey: String
  deleteUser: User
  addList(name: String!, isDefault: Boolean): List
  updateList(listId: ID!, name: String, isDefault: Boolean): List
  removeList(listId: ID!): List
  updateUserProduct(userProductId: ID!, productAlias: String): UserProduct
  addToList(
    listId: ID!
    barcode: String!
    notes: String
    quantity: Int
    isCompleted: Boolean
  ): ListItem
  updateListItem(listItemId: ID!, notes: String, quantity: Int, isCompleted: Boolean): ListItem
  removeFromList(listItemId: ID!, listId: ID!): ListItem
  addItemToDefaultList(
    barcode: String!
    notes: String
    quantity: Int
    isCompleted: Boolean
  ): ListItem
}
